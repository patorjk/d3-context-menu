<!doctype>
<html>
<head>
	<meta charset="utf-8">
	<title>Example</title>

	<link href="../css/d3-context-menu.css" rel="stylesheet">

	<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js"></script>
	<script src="../js/d3-context-menu.js"></script>
</head>
<body>

	<script>
		// Define your menu
		var menu = [
			{
				title: 'Item #1',
				action: function(data, elm, index) {
					console.log('Item #1 clicked!');
					console.log('The data for this circle is: ' + data);
				}
			},
			{
				title: 'Item #2',
				action: function(data, elm, index) {
					console.log('You have clicked the second item!');
					console.log('The data for this circle is: ' + data);
				}
			},

			{
				title: function() {
					if (menu[3].disabled) {
						return 'Re-enable menu item #4';
					} else {
						return 'Disable menu item #4';
					}
				},
				action: function(elm, d, i) {
					menu[3].disabled = !menu[3].disabled;
				}
			},
			{
				title: 'Item #4',
				disabled: false,
				action: function(data, elm, index) {
					console.log('You have clicked the 4th item!');
					console.log('The data for this circle is: ' + data);
				}
			},

			/*
				If an item has a "divider" property set to true, it'll be considered a divider
			*/
			{
				divider: true
			},

			/*
				If you don't define an action for a menu item, it'll be considered a "header" item
			*/
			{
				title: 'Header'
			},
			{
				title: 'Last item',
				action: function(data, elm, index) {
					console.log('You have clicked the last item!');
					console.log('The data for this circle is: ' + data);
				}
			},
		]

		var data = [1, 2, 3];

		var g = d3.select('body').append('svg')
			.attr('width', 200)
			.attr('height', 400)
			.append('g');

		g.selectAll('circles')
			.data(data)
			.enter()
			.append('circle')
			.attr('r', 30)
			.attr('fill', 'steelblue')
			.attr('cx', function(d) {
				return 100;
			})
			.attr('cy', function(d) {
				return d * 100;
			})
			.on('contextmenu', d3.contextMenu(menu, {
				onOpen: function(data, elm, index) {
					console.log('opened!');
					console.log('The data for this circle is: ' + data);
				},
				onClose: function(data, elm, index) {
					console.log('closed!');
					console.log('The data for this circle is: ' + data);
				},
				position: function (data, elm, index) {
					var bounds = elm.getBoundingClientRect();

					if (data === 1) {
						return {
							left: bounds.left + bounds.width / 2,
							top: bounds.top + bounds.height + 5
						};
					}
					else if (data === 2) {
						return {
							left: bounds.left + bounds.width + 5,
							top: bounds.top + bounds.height / 2
						};
					}
					else {
						return null;
					}
				}
			})); // attach menu to element
	</script>
</body>
</html>